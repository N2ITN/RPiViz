# base-image for python on any machine using a template variable,
# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates
FROM resin/raspberrypi3-python


# use apt-get if you need to install dependencies,
# for instance if you need ALSA sound utils, just uncomment the lines below.

# Set our working directory

RUN pwd


RUN sudo apt-get update && sudo apt-get upgrade



# pip install python deps from requirements.txt on the resin.io build server
RUN sudo pip install picamera requests sh 
#numpy==1.11.2


RUN sudo apt-get install libopencv-dev python-opencv libboost-python-dev  cmake 
RUN sudo pip install dlib==19.1.0

RUN sudo apt-get install apt-utils

#RUN sudo apt-get install -y realvnc-vnc-server
#RUN sudo apt-get realvnc
RUN apt-get clean && rm -rf /var/lib/apt/lists/*
#RUN sudo systemctl enable vncserver-virtuald.service



WORKDIR /usr/src/app
# Copy requirements.txt first for better cache on later pushes
COPY ./requirements.txt /requirements.txt

RUN curl -o shape_predictor_68_face_landmarks.dat.bz2 http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2 
RUN  bunzip2  shape_predictor_68_face_landmarks.dat.bz2
RUN ls
RUN cp shape_predictor_68_face_landmarks.dat raspiviz


#RUN sudo pip install Flask==0.10.1
# This will copy all files in our root to the working  directory in the container
COPY . ./





# switch on systemd init system in container
ENV INITSYSTEM on



# main.py will run when container starts up on the device

#CMD python /usr/src/app/raspiviz/executor.py 

CMD ["python", "-m", "SimpleHTTPServer","80"]

